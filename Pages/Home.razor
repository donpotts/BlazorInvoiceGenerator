@page "/"
@using BlazorInvoiceGenerator.Utils
@using BlazorInvoiceGenerator.Components
@using BlazorInvoiceGenerator.Services
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject InvoiceDataService InvoiceDataService

<PageTitle>Blazor Bill Generator</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 home-page">
    <div class="container mx-auto px-6 py-16">
        <!-- Hero Section -->
        <div class="text-center">
            <h1 class="text-5xl md:text-6xl font-bold text-slate-800 mb-6 leading-tight text-center">
                Blazor Invoice Generator
            </h1>
            <p class="text-xl md:text-2xl text-slate-600 mb-10 max-w-3xl mx-auto leading-relaxed">
                Generate stunning, professional invoices with our modern templates. 
                Choose from 12+ beautifully crafted designs.
            </p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center items-center w-full" style="justify-content: center; align-items: center;">
                <a class="btn btn-primary mx-2 d-inline-flex align-items-center" href="invoice-builder">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M12 4v12l6-6-6-6z"/>
                    </svg>
                    Start Creating Now
                </a>
                <a class="btn btn-outline-primary mx-2 d-inline-flex align-items-center" href="templates">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z"/>
                    </svg>
                    Browse Templates
                </a>
            </div>
        </div>
        <hr class="my-12 border-slate-300" />
        <!-- Template Preview Gallery -->
        <div class="container mx-auto px-6 flex justify-center">
            <div class="max-w-6xl w-full mx-auto mb-16">
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 2rem; margin-top: 2rem;">
                    @for (int i = 1; i <= 12; i++)
                    {
                        var templateNum = i;
                        <div class="group bg-slate-50/80 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 border border-slate-200/60 overflow-hidden backdrop-blur-sm" style="display: flex; flex-direction: column; height: 500px;">
                            <!-- Template Info - Fixed Height Section -->
                            <div class="text-center" style="padding: 1.5rem 1rem 1rem 1rem; flex-shrink: 0;">
                                <h3 class="text-lg font-bold text-slate-800 mb-2">Template @templateNum</h3>
                                <p class="text-sm text-slate-600">@GetTemplateStyle(templateNum)</p>
                            </div>
                            
                            <!-- Template Preview - Flex Growing Section -->
                            <div id="template-preview-@templateNum" class="cursor-pointer flex-1 relative overflow-hidden template-preview-hover" style="margin: 0 1rem;" @onclick="(() => PreviewTemplate(templateNum))">
                                <div class="template-mini-preview" style="width: 100%; height: 100%; background: linear-gradient(135deg, @GetTemplateGradientColors(templateNum)); border-radius: 8px; display: flex; align-items: center; justify-content: center; position: relative; transition: all 0.3s ease;">
                                    <div class="template-content" style="width: 204px; height: 264px; background: white; border-radius: 4px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); overflow: hidden; transform: scale(0.95); display: flex; align-items: center; justify-content: center; transition: all 0.3s ease;">
                                        <div style="width: 816px; height: 1056px; transform: scale(0.25); transform-origin: top left; position: absolute; top: 0; left: 0; transition: transform 0.3s ease;">
                                            <InvoiceTemplate TemplateNumber="@templateNum" Data="@SampleTemplateData" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Use Template Button - Fixed Height Section -->
                            <div style="padding: 1rem; flex-shrink: 0;">
                                <a class="btn btn-primary w-full d-flex align-items-center justify-content-center mt-2" href="@($"invoice-builder?template={templateNum}")">
                                    Use This Template
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- CTA Section -->
        <div class="container mx-auto px-6">
            <div class="cta-section text-center bg-gradient-to-r from-indigo-600 via-purple-600 to-blue-600 rounded-2xl p-16 text-white shadow-2xl flex flex-col items-center">
                <h2 class="text-4xl md:text-5xl font-bold mb-8" style="margin-top: 2.5rem; color: #312e81;">Ready to Create Your First Invoice?</h2>
                <button class="cta-btn inline-flex items-center bg-white border-2 border-indigo-600 text-indigo-600 font-semibold hover:bg-indigo-50 hover:border-indigo-700 hover:text-indigo-700 transition-all duration-200 shadow hover:shadow-lg transform hover:scale-105 gap-2" @onclick="StartCreating">
                    Get Started Now - It's Free! <span style="font-size:1.5em;line-height:1;">🚀</span>
                </button>
            </div>
        </div>
        <div class="footer-copyright text-center">
            <p class="text-sm text-slate-500">
                &copy; 2025 Blazor Invoice Generator. All rights reserved.
            </p>
        </div>
    </div>
</div>

@code {
    private InvoiceData SampleTemplateData = new InvoiceData
    {
        YourCompany = new CompanyInfo { Name = "Your Company", Address = "123 Business St", Phone = "555-0123" },
        Invoice = new InvoiceInfo { Number = "INV-001", Date = DateTime.Now, PaymentDate = DateTime.Now.AddDays(30) },
        BillTo = new PersonInfo { Name = "Client Name", Address = "456 Client Ave", Phone = "555-0456" },
        ShipTo = new PersonInfo { Name = "Client Name", Address = "456 Client Ave", Phone = "555-0456" },
        Items = new List<ItemInfo> { 
            new ItemInfo { Name = "Professional Service", Description = "Consulting work", Model = "PRO-2024", Quantity = 1, Amount = 100.0m, Total = 100.0m },
            new ItemInfo { Name = "Additional Service", Description = "Support services", Model = "SUP-2024", Quantity = 2, Amount = 50.0m, Total = 100.0m }
        },
        SubTotal = 200.0m,
        TaxPercentage = 8.5m,
        TaxAmount = 17.0m,
        GrandTotal = 217.0m,
        Notes = "Thank you for your business!",
        SelectedCurrency = "USD"
    };

    private void StartCreating()
    {
        Navigation.NavigateTo("invoice-builder");
    }

    private void ViewTemplates()
    {
        Navigation.NavigateTo("templates");
    }

    private void UseTemplate(int templateNumber)
    {
        // Update the service with sample data and navigate to invoice builder with template selected
        InvoiceDataService.UpdateInvoiceData(SampleTemplateData);
        Navigation.NavigateTo($"invoice-builder?template={templateNumber}");
    }

    private void PreviewTemplate(int templateNumber)
    {
        // Update service with sample data and navigate to preview page
        InvoiceDataService.UpdateInvoiceData(SampleTemplateData);
        Navigation.NavigateTo($"invoice-preview/{templateNumber}");
    }

    private async Task PrintPDF(int templateNumber)
    {
        // Call JS interop to generate PDF for the template preview
        await JSRuntime.InvokeVoidAsync("generateTemplatePDF", templateNumber, SampleTemplateData);
    }

    private string GetTemplateGradient(int templateNumber)
    {
        return templateNumber switch
        {
            1 => "from-blue-400 to-blue-600",
            2 => "from-slate-400 to-slate-600", 
            3 => "from-emerald-400 to-emerald-600",
            4 => "from-gray-400 to-gray-600",
            5 => "from-slate-500 to-slate-700",
            6 => "from-sky-400 to-sky-600",
            7 => "from-indigo-400 to-indigo-600",
            8 => "from-purple-400 to-purple-600",
            9 => "from-teal-400 to-teal-600",
            10 => "from-violet-400 to-violet-600",
            11 => "from-rose-400 to-rose-600",
            12 => "from-green-400 to-green-600",
            _ => "from-gray-400 to-gray-600"
        };
    }

    private string GetTemplateGradientColors(int templateNumber)
    {
        return templateNumber switch
        {
            1 => "#3b82f6, #1d4ed8",
            2 => "#4b5563, #1f2937", 
            3 => "#10b981, #065f46",
            4 => "#6b7280, #374151",
            5 => "#64748b, #334155",
            6 => "#0ea5e9, #0284c7",
            7 => "#6366f1, #4f46e5",
            8 => "#8b5cf6, #7c3aed",
            9 => "#14b8a6, #0f766e",
            10 => "#a855f7, #9333ea",
            11 => "#ef4444, #dc2626",
            12 => "#22c55e, #16a34a",
            _ => "#6b7280, #374151"
        };
    }

    private string GetTemplateStyle(int templateNumber)
    {
        return templateNumber switch
        {
            1 => "Classic Professional",
            2 => "Minimal Clean", 
            3 => "Modern Professional",
            4 => "Simple & Clean",
            5 => "Corporate Standard",
            6 => "Contemporary Blue",
            7 => "Sleek Modern",
            8 => "Elegant Purple",
            9 => "Fresh Green",
            10 => "Creative Violet",
            11 => "Bold Red",
            12 => "Natural Green",
            _ => "Professional"
        };
    }
}
