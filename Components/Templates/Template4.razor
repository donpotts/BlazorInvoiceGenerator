@namespace BlazorInvoiceGenerator.Components.Templates
@using BlazorInvoiceGenerator.Utils

<BaseTemplate Data="@Data">
    <div style="width: 816px; min-width: 816px; max-width: 816px; height: 1056px; min-height: 1056px; max-height: 1056px; background: white; margin: 0 auto; box-sizing: border-box; padding: 48px; display: flex; flex-direction: column; page-break-after: always;">
        <!-- Professional Invoice Header -->
        <div style="background: white; color: black; padding: 3.5rem 2rem 2rem 2rem; border-radius: 8px 8px 0 0; border: 1px solid #e5e7eb; box-shadow: 0 1px 3px rgba(0,0,0,0.1); min-height: 120px; display: flex; align-items: flex-end;">
            <div style="text-align: center; width: 100%;">
                <h1 style="font-size: 2.5rem; font-weight: bold; margin: 0;">INVOICE</h1>
            </div>
        </div>
        <!-- Main Content -->
        <div style="padding: 2rem 0 0 0; flex: 1; display: flex; flex-direction: column;">
            <!-- Company, Bill/Ship To, etc. -->
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem; margin-top: 0;">
                <div>
                    <div style="font-size: 1rem; font-weight: bold;">@InvoiceData.YourCompany?.Name</div>
                    <div style="font-size: 0.875rem; display: flex; align-items: center;">
                        <span style="margin-right: 0.5rem; color: #6b7280;">üìç</span>
                        <span>@InvoiceData.YourCompany?.Address</span>
                    </div>
                    <div style="font-size: 0.875rem; display: flex; align-items: center;">
                        <span style="margin-right: 0.5rem; color: #6b7280;">üìû</span>
                        <span>@InvoiceData.YourCompany?.Phone</span>
                    </div>
                </div>
                <div style="text-align: right;">
                    <div style="font-size: 0.875rem;">Invoice Number: <span style="font-weight: bold;">@InvoiceData.Invoice?.Number</span></div>
                    <div style="font-size: 0.875rem;">Invoice Date: <span style="font-weight: bold;">@(InvoiceData.Invoice?.Date.ToString("yyyy-MM-dd") ?? "N/A")</span></div>
                    <div style="font-size: 0.875rem;">Due Date: <span style="font-weight: bold;">@(InvoiceData.Invoice?.PaymentDate.ToString("yyyy-MM-dd") ?? "N/A")</span></div>
                </div>
            </div>
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem; margin-top: 0;">
                <div>
                    <div style="font-size: 0.875rem; font-weight: bold; display: flex; align-items: center;">
                        <span style="margin-right: 0.5rem; color: #6b7280;">üíº</span>
                        <span>Bill To:</span>
                    </div>
                    <div style="font-size: 0.875rem;">@InvoiceData.BillTo?.Name</div>
                    <div style="font-size: 0.875rem;">@InvoiceData.BillTo?.Address</div>
                    <div style="font-size: 0.875rem;">@InvoiceData.BillTo?.Phone</div>
                </div>
                <div style="text-align: right;">
                    <div style="font-size: 0.875rem; font-weight: bold; display: flex; align-items: center;">
                        <span style="margin-right: 0.5rem; color: #6b7280;">üöö</span>
                        <span>Ship To:</span>
                    </div>
                    <div style="font-size: 0.875rem;">@InvoiceData.ShipTo?.Name</div>
                    <div style="font-size: 0.875rem;">@InvoiceData.ShipTo?.Address</div>
                    <div style="font-size: 0.875rem;">@InvoiceData.ShipTo?.Phone</div>
                </div>
            </div>
            <!-- Items Table -->
            <div style="margin-bottom: 2rem; flex: 1;">
                <table style="width: 100%; border-collapse: collapse;">
                    <thead>
                        <tr style="background: #f9fafb; border-bottom: 1px solid #e5e7eb;">
                            <th style="padding: 0.75rem; text-align: left; font-size: 0.875rem; font-weight: bold;">Item</th>
                            <th style="padding: 0.75rem; text-align: left; font-size: 0.875rem; font-weight: bold;">Model</th>
                            <th style="padding: 0.75rem; text-align: center; font-size: 0.875rem; font-weight: bold;">Quantity</th>
                            <th style="padding: 0.75rem; text-align: right; font-size: 0.875rem; font-weight: bold;">Unit Price</th>
                            <th style="padding: 0.75rem; text-align: right; font-size: 0.875rem; font-weight: bold;">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (InvoiceData.Items != null)
                        {
                            @foreach (var item in InvoiceData.Items)
                            {
                                <tr style="border-bottom: 1px solid #e5e7eb;">
                                    <td style="padding: 0.75rem; text-align: left; font-size: 0.875rem;">
                                        @item.Name<br />
                                        <span style="font-size: 0.75rem; color: #6b7280;">@item.Description</span>
                                    </td>
                                    <td style="padding: 0.75rem; text-align: left; font-size: 0.875rem;">@item.Model</td>
                                    <td style="padding: 0.75rem; text-align: center; font-size: 0.875rem;">@item.Quantity</td>
                                    <td style="padding: 0.75rem; text-align: right; font-size: 0.875rem;">@FormatCurrency(item.Amount, InvoiceData.SelectedCurrency)</td>
                                    <td style="padding: 0.75rem; text-align: right; font-size: 0.875rem;">@FormatCurrency(item.Total, InvoiceData.SelectedCurrency)</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <!-- Summary Section -->
            <div style="width: 100%; display: flex; justify-content: flex-end;">
                <div style="text-align: right; margin: 2.5rem 0 1.5rem 0; padding: 1.5rem 2.5rem 1.5rem 1.5rem; border-radius: 12px; background: #f9fafb; min-width: 320px; box-shadow: 0 2px 12px 0 rgba(0,0,0,0.08);">
                    <div style="font-size: 0.95rem; margin-bottom: 0.5rem;">Subtotal: <span style="font-weight: bold;">@FormatCurrency(InvoiceData.SubTotal, InvoiceData.SelectedCurrency)</span></div>
                    @if (InvoiceData.TaxPercentage > 0)
                    {
                        <div style="font-size: 0.95rem; margin-bottom: 0.5rem;">Tax (@InvoiceData.TaxPercentage%): <span style="font-weight: bold;">@FormatCurrency(InvoiceData.TaxAmount, InvoiceData.SelectedCurrency)</span></div>
                    }
                    <div style="font-size: 1.15rem; font-weight: bold; color: black; margin-top: 0.75rem;">Total: <span>@FormatCurrency(InvoiceData.GrandTotal, InvoiceData.SelectedCurrency)</span></div>
                </div>
            </div>
            <!-- Notes Section -->
            @if (!string.IsNullOrEmpty(InvoiceData.Notes))
            {
                <div style="font-size: 0.875rem; margin-bottom: 2rem;">
                    <div style="font-weight: bold; display: flex; align-items: center;">
                        <span style="margin-right: 0.5rem; color: #6b7280;">üìù</span>
                        <span>Notes:</span>
                    </div>
                    <div>@InvoiceData.Notes</div>
                </div>
            }
            <!-- Footer -->
            <div style="margin-top: auto; padding-top: 1rem; border-top: 1px solid #e5e7eb; text-align: center;">
                <p style="font-size: 0.75rem; color: black; margin: 0;">Thank you for your business!</p>
            </div>
        </div>
    </div>
</BaseTemplate>

@code {
    [Parameter] public object Data { get; set; }
    private InvoiceData InvoiceData => Data as InvoiceData ?? new InvoiceData();

    private string FormatCurrency(decimal amount, string? currency)
    {
        // Always use USD formatting
        return string.Format("{0:C}", amount);
    }
}
